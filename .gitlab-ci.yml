deploy-client:
  stage: deploy
  image: node:12.13.0-alpine
  before_script:
    - npm i -g firebase-tools
  script:
    - cd client
    - npm install
    - rm -rf build/
    - npm run build
    - firebase deploy --token $FIREBASE_TOKEN
  only:
    refs:
      - master
    changes:
      - client/**/*
  environment:
    name: production
    url: https://breadddit.web.app/
# deploy-server:
#   stage: deploy
#   image: python:2.7
#   before_script:
#     - echo "deb http://packages.cloud.google.com/apt cloud-sdk-jessie main" | tee /etc/apt/sources.list.d/google-cloud-sdk.list
#     - curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -
#     - apt-get update
#     - apt-get -qq -y install google-cloud-sdk
#     - apt-get -qq -y install google-cloud-sdk-app-engine-go
#   script:
#     -  curl -O https://storage.googleapis.com/golang/go1.12.9.linux-amd64.tar.gz
#     - tar -xvf go1.12.9.linux-amd64.tar.gz
#     - chown -R root:root ./go
#     - mv go /usr/local
#     - export GOPATH=$HOME/go
#     - export PATH=$PATH:/usr/local/go/bin:$GOPATH/bin
#     - ls server
#     - mkdir $GOPATH/src
#     - mv server $GOPATH/src
#     - cd
#     - cd $GOPATH/src/server
#     - echo $GCD_KEY_FILE > /tmp/$CI_PIPELINE_ID.json
#     - gcloud auth activate-service-account --key-file=/tmp/$CI_PIPELINE_ID.json
#     - go mod vendor
#     - gcloud --quiet --project $GCD_PROJECT_ID app deploy
#   after_script:
#     - rm /tmp/$CI_PIPELINE_ID.json
#   only:
#     refs:
#       - master
#     changes:
#       - server/**/*
